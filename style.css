* {
  margin: 0;
  box-sizing: border-box;
}

:root {
  --error: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'><g fill='none' fill-rule='evenodd'><circle cx='10' cy='10' r='10' fill='crimson'/><path fill='%23FFFFFF' d='M9,6.84848485 C9,5.93939394 9.4,5.33333333 10,5.33333333 C10.6,5.33333333 11,5.93939394 11,6.84848485 L11,10.4848485 C11,11.3939394 10.6,12 10,12 C9.4,12 9,11.3939394 9,10.4848485 L9,6.84848485 Z M10,14.6666667 C9.41666667,14.6666667 9,14.25 9,13.6666667 C9,13.0833333 9.41666667,12.6666667 10,12.6666667 C10.5833333,12.6666667 11,13.0833333 11,13.6666667 C11,14.25 10.5833333,14.6666667 10,14.6666667 L10,14.6666667 Z'/></g></svg>");
}

body {
  background-color: rgb(159, 182, 226);
}

#splash {
  width: 100%;
  height: 100vh;
  background-image: url(console.jpg);
  background-size: cover;
  background-position: 50% 50%;
  opacity: 80%;
}

span {
  font-family: "Open Sans", sans-serif;
  font-size: 12px;
  margin-left: 2px;
}
h1 {
  text-align: center;
  padding-top: 80px;
  font-family: "Press Start 2P", cursive;
  color: white;
  margin-bottom: 20px;
  font-size: 38px;
}

h2 {
  font-size: 18px;
  text-align: center;
  font-family: "Press Start 2P", cursive;
  color: white;
}
li {
  list-style-type: none;
}

form {
  background-color: white;
  position: absolute;
  left: 37%;
  top: 60%;
  border-radius: 10px;
  padding: 10px;
  box-shadow: 10px 10px 5px #aaaaaa;
}

input {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  box-sizing: border-box;
  background-color: rgba(240, 240, 240, 0.363);
  border: 1px solid black;
  border-radius: 5px;
}

input[name="platform"] {
  padding: 12px 20px;
}

input[name="age-limit"]:valid {
  width: 15%;
}

textarea {
  height: 20vh;
  width: 100%;
}
.formgroup {
  margin: 20px;
}

.form-control {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}
fieldset {
  margin: 20px;
}

legend {
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
}
.price-span,
.metascore-span {
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 15px;
}

button {
  position: relative;
  background-color: black;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 5px;
  transition: all 0.2s;
  left: 35%;
  margin-bottom: 15px;
}

button:hover {
  background-color: rgb(107, 137, 192);
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 5px;
}

/* Checkbox styling */
/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 14px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.container-checkbox {
  margin-top: 10px;
  position: relative;
  right: 15%;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196f3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* CSS styling */
input:invalid {
  border-color: red;
}

input:valid {
  border-color: green;
}

input:valid:not(:placeholder-shown, :focus) {
  border-color: green;
}
input:invalid:not(:placeholder-shown, :focus) {
  border-color: red;
  box-shadow: 0 0 0 1px #ffc025;
  background-position: right 16px center;
  background-size: 20px 20px;
  background-repeat: no-repeat;
  color: red;
  background-image: var(--error);
  animation: shake 0.125s 2 backwards;
}

textarea:invalid {
  border-color: red;
}

textarea:valid {
  border-color: green;
}

textarea:valid:not(:placeholder-shown, :focus) {
  border-color: green;
}
textarea:invalid:not(:placeholder-shown, :focus) {
  border-color: red;
  box-shadow: 0 0 0 1px #ffc025;
  background-position: right 16px center;
  background-size: 20px 20px;
  background-repeat: no-repeat;
  color: red;
  background-image: var(--error);
  animation: shake 0.125s 2 backwards;
}

/* Radios styling */
.radios {
  display: grid;
  grid: auto-flow 1fr / max-content 1fr;
  gap: 0.25rem 0.4rem;
  place-items: center start;
  font-size: 14px;
  margin-top: 10px;
}

input[type="checkbox"],
input[type="radio"] {
  width: 1.2rem;
  height: 1.2rem;
  border-radius: var(--border-radius, 0);
  border: 0.075rem solid hsl(200 var(--saturation, 0%) 70%);
  background: hsl(200 50% 100%);
  margin: 0;
  display: inline-grid;
  outline: none;
  transition: 0.2s;
}

input[type="radio"] {
  --border-radius: 50%;
}

input[type="checkbox"] {
  --border-radius: 0.3rem;
}

input[type="checkbox"]:focus,
input[type="radio"]:focus {
  box-shadow: 0 0 0 0.2rem hsl(200 50% 85%);
}
fieldset:disabled input,
fieldset:disabled label {
  opacity: 0.6;
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
  --saturation: 50%;
  /* --animation: bounce-in; */
}

@supports (-webkit-appearance: none) or (appearance: none) {
  input[type="checkbox"],
  input[type="radio"] {
  }

  input[type="radio"]::after {
    content: "";
    height: 0.6rem;
    width: 0.6rem;
    place-self: center;
    border-radius: inherit;
    background: hsl(200 70% 50%);
    opacity: 0;
    transition: 0.2s;
    animation: var(--animation) 0.5s alternate both
      cubic-bezier(0.5, 0, 0.5, 1.8);
    border-radius: 50%;
  }

  input[type="checkbox"]:checked {
    background: hsl(200 70% 50%);
  }

  input[type="checkbox"]::after {
    content: "";
    width: 0.3rem;
    height: 0.7rem;
    border-radius: 0;
    border: 2px solid #fff;
    border-top: 0;
    border-left: 0;
    transition: 0.3s;
    transform: translateY(-0.1rem) rotate(0deg);
    place-self: center;
    opacity: 0;
  }

  input[type="checkbox"]:checked::after {
    opacity: 1;
    transform: translateY(-0.1rem) rotate(45deg);
  }
}

/* CSS animation */

@keyframes shake {
  25% {
    transform: translateX(-6px);
  }
  75% {
    transform: translateX(6px);
  }
}

@media only screen and (max-width: 500px) {
  #splash {
    background-position: 50% 57%;
    opacity: 80%;
  }
  h1 {
    font-size: 25px;
  }
  form {
    background-color: white;
    position: absolute;
    left: 10%;
    top: 60%;
    border-radius: 10px;
    padding: 10px;
    box-shadow: 10px 10px 5px #aaaaaa;
  }
}
